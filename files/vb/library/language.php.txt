<?php
/*========================================================================*\
|| ###################################################################### ||
|| # vBulletin 6.1.0 Alpha 4 Week 2 - Licence Number VBCW2VFT7A
|| # ------------------------------------------------------------------ # ||
|| # Copyright 2000-2024 MH Sub I, LLC dba vBulletin. All Rights Reserved.  # ||
|| # This file may not be redistributed in whole or significant part.   # ||
|| # ----------------- VBULLETIN IS NOT FREE SOFTWARE ----------------- # ||
|| # http://www.vbulletin.com | http://www.vbulletin.com/license.html   # ||
|| ###################################################################### ||
\*========================================================================*/

/**
 * vB_Library_Language
 *
 * @package vBLibrary
 */

class vB_Library_Language extends vB_Library
{
	/**
	* Fetches either the entire languages array, or a single language
	*
	* This should only be used if the actual db values are needed.  Otherwise fetch from the
	* datastore using the getLanguageCache function
	*
	* @param	int	$languageid -- if not provided (or set to 0) then all languages will be returned.
	* @param	bool $baseonly -- if true only fetch a subset of fields.
	*
	* @return	array -- either the array for the individual language or [id => language array for all]
	*/
	//it's not clear if the baseonly mode is used any longer.
	public function getLanguages(int $languageid = 0, bool $baseonly = false) : array
	{
		$bf_misc_languageoptions = vB::getDatastore()->getValue('bf_misc_languageoptions');

		//this should be a table query.
		$languages = vB::getDbAssertor()->getRows('fetchLanguages',
			[
				'baseonly' => $baseonly,
				'direction' => $bf_misc_languageoptions['direction'],
				'languageid' => $languageid,
			],
			false,
			'languageid'
		);

		if (count($languages) == 0)
		{
			throw new vB_Exception_Api('invalid_language_specified');
		}

		if ($languageid)
		{
			return reset($languages);
		}

		return $languages;
	}

	public function getLanguageCache() : array
	{
		$languages = vB::getDatastore()->getValue('languagecache');
		if (!$languages)
		{
			$languages = $this->buildLanguageCache();
		}
		return $languages;
	}

	public function buildLanguageCache() : array
	{
		$languagecache = $this->getLanguages();
		vB::getDatastore()->buildSerialized('languagecache', $languagecache);
		return $languagecache;
	}

	/**
	 * Rebuild the language data structures
	 */
	//cover for legacy code that should really be ported to here.
	public function rebuildAllLanguages() : void
	{
		//hide the magic -1 for rebuilding all languages.
		$this->rebuildLanguage(-1);
	}

	public function rebuildLanguage(int $languageid) : void
	{
		require_once(DIR . '/includes/adminfunctions.php');
		require_once(DIR . '/includes/adminfunctions_language.php');
		build_language($languageid);
	}
}

/*=========================================================================*\
|| #######################################################################
|| # Downloaded: 12:50, Tue Dec 24th 2024
|| # CVS: $RCSfile$ - $Revision: 115178 $
|| #######################################################################
\*=========================================================================*/
