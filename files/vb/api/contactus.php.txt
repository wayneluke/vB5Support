<?php if (!defined('VB_ENTRY')) die('Access denied.');
/*========================================================================*\
|| ###################################################################### ||
|| # vBulletin 6.1.0 Alpha 4 Week 2 - Licence Number VBCW2VFT7A
|| # ------------------------------------------------------------------ # ||
|| # Copyright 2000-2024 MH Sub I, LLC dba vBulletin. All Rights Reserved.  # ||
|| # This file may not be redistributed in whole or significant part.   # ||
|| # ----------------- VBULLETIN IS NOT FREE SOFTWARE ----------------- # ||
|| # http://www.vbulletin.com | http://www.vbulletin.com/license.html   # ||
|| ###################################################################### ||
\*========================================================================*/

/**
 * vB_Api_Contactus
 * vBulletin Contact Us API
 *
 * @package vBApi
 * @access public
 */
class vB_Api_Contactus extends vB_Api
{
	/**
	 * Fetch predefined contact us subjects
	 *
	 * @return array
	 */
	public function fetchPredefinedSubjects()
	{
		$vboptions = vB::getDatastore()->getValue('options');

		$options = array();
		if ($vboptions['contactusoptions'])
		{
			$options = explode("\n", trim($vboptions['contactusoptions']));
			foreach($options AS $index => $title)
			{
				// Look for the {(int)} or {(email)} identifier at the start and strip it out
				if (preg_match('#^({.*}) (.*)$#siU', $title, $matches))
				{
					$options[$index] = $matches[2];
				}
			}
		}

		return $options;
	}

	/**
	 * Send contact us mail
	 *
	 * @param array $maildata contact us mail data. Including name, email, subject, other_subject, message
	 * @param array $hvinput Human Verify input data. @see vB_Api_Hv::verifyToken()
	 * @throws vB_Exception_Api
	 */
	public function sendMail($maildata, $hvinput = [])
	{
		if (empty($maildata['name']) || empty($maildata['email']) || empty($maildata['message']))
		{
			throw new vB_Exception_Api('please_complete_required_fields');
		}

		$vboptions = vB::getDatastore()->getValue('options');

		if (
			$vboptions['contactusoptions'] AND
			$maildata['subject'] == 'other' AND
			($maildata['other_subject'] == '' OR !$vboptions['contactusother'])
		)
		{
			throw new vB_Exception_Api('nosubject');
		}

		if (!is_valid_email($maildata['email']))
		{
			throw new vB_Exception_Api('bademail');
		}

		vB_Api::instanceInternal('hv')->verifyToken($hvinput, 'contactus');

		$phraseApi = vB_Api::instanceInternal('phrase');

		// No Errors. Send mail.
		$languageid = $vboptions['languageid'];
		if ($vboptions['contactusoptions'])
		{
			if ($maildata['subject'] == 'other')
			{
				$maildata['subject'] = $maildata['other_subject'];
			}
			else
			{
				$options = explode("\n", trim($vboptions['contactusoptions']));
				foreach ($options AS $index => $title)
				{
					if ($index == $maildata['subject'])
					{
						if (preg_match('#^{(.*)} (.*)$#siU', $title, $matches))
						{
							$title = $matches[2];
							if (is_numeric($matches[1]) AND intval($matches[1]) !== 0)
							{
								$userinfo = vB_User::fetchUserinfo($matches[1]);
								$alt_email = $userinfo['email'];
								$languageid = $userinfo['languageid'];
							}
							else
							{
								$alt_email = $matches[1];
							}
						}
						$maildata['subject'] = $title;
						break;
					}
				}
			}
		}

		if (!empty($alt_email))
		{
			if ($alt_email == $vboptions['webmasteremail'] OR $alt_email == $vboptions['contactusemail'])
			{
				$ip = vB::getRequest()->getIpAddress();
			}
			else
			{
				$phrases = $phraseApi->renderPhrases(['n_a' => 'n_a']);
				$ip = $phrases['phrases']['n_a'];
			}
			$destemail = $alt_email;
		}
		else
		{
			$ip = vB::getRequest()->getIpAddress();
			if ($vboptions['contactusemail'])
			{
				$destemail = $vboptions['contactusemail'];
			}
			else
			{
				$destemail = $vboptions['webmasteremail'];
			}
		}

		$currentuser = vB::getCurrentSession()->fetch_userinfo();
		$string = vB::getString();
		$bbtitle_escaped = $string->htmlspecialchars($vboptions['bbtitle']);

		$mailcontent = $phraseApi->fetchEmailPhrases(
			'contactus',
			[
				$bbtitle_escaped,
				$string->htmlspecialchars($maildata['name']),
				$string->htmlspecialchars($maildata['email']),
				nl2br($string->htmlspecialchars($maildata['message'])),
				$ip,
				$currentuser['username'],
				$currentuser['userid'],
			],
			[
				$vboptions['bbtitle'],
				$maildata['subject'],
			],
			$languageid
		);

		$sendnow = true;
		$from = ($vboptions['contactusemail'] ? $vboptions['contactusemail'] : $vboptions['webmasteremail']);
		// Note, we have to add the line break in the header ourselves for now, otherwise the "MIME-Version: 1.0" gets
		// stuck on the same line and can cause strange problems.
		$uheaders = 'Reply-To: ' . vB_Mail::encodeForHeader($maildata['name']) . ' <' . $maildata['email'] . '>' . "\n";
		$username = $maildata['name'];

		// Should not use vbmailWithUnsubscribe() / isUserOptedOutOfEmail() -- this is going to the contactus/webmaster.
		$flood = vB_Mail::vbmail2(
			$destemail,
			$mailcontent['subject'],
			$mailcontent['message'],
			$sendnow,
			$from,
			$uheaders,
			$username
		);

		if(is_array($flood))
		{
			throw new vB_Exception_Api($flood[0], $flood[1]);
		}

		return true;
	}
}

/*=========================================================================*\
|| #######################################################################
|| # Downloaded: 12:50, Tue Dec 24th 2024
|| # CVS: $RCSfile$ - $Revision: 115430 $
|| #######################################################################
\*=========================================================================*/
