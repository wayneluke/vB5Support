<?php
/*========================================================================*\
|| ###################################################################### ||
|| # vBulletin 6.1.0 Alpha 4 Week 2 - Licence Number VBCW2VFT7A
|| # ------------------------------------------------------------------ # ||
|| # Copyright 2000-2024 MH Sub I, LLC dba vBulletin. All Rights Reserved.  # ||
|| # This file may not be redistributed in whole or significant part.   # ||
|| # ----------------- VBULLETIN IS NOT FREE SOFTWARE ----------------- # ||
|| # http://www.vbulletin.com | http://www.vbulletin.com/license.html   # ||
|| ###################################################################### ||
\*========================================================================*/

// helper class for styleschedule & standardizing datetime stamps
class vB_Entity_WebManifest extends vB_Entity implements Stringable
{
	use vB_Trait_NoSerialize;


	// https://web.dev/articles/add-manifest

	// You must provide at least one of short_name or name in your manifest.
	// If you provide both, name is used when the app is installed, and
	// short_name is used on the user's home screen, launcher, or other places
	// where space is limited.
	//public string $name;
	//public readonly string $short_name;

	// For Chromium, you must provide at least a 192x192 pixel icon and a 512x512
	// pixel icon. If only those two icon sizes are provided, Chrome automatically
	// scales the icons to fit the device. If you'd prefer to scale your own icons,
	// and adjust them for pixel-perfection, provide icons in increments of 48dp.
	// src, sizes, type,  optional 'purpose': 'any maskable'
	//public array $icons;


	// The id property lets you explicitly define the identifier used for your
	// application. Adding the id property to the manifest removes the
	// dependency on the start_url or the location of the manifest, and makes it
	// possible to update them in the future. For more information, see Uniquely
	// identifying PWAs with the web app manifest ID property.
	// https://developer.chrome.com/docs/capabilities/pwa-manifest-id
	//public string $id;


	// The start_url is a required property. It tells the browser where your app
	// should start when it launches, and prevents the app from starting on
	// whatever page the user was on when they added your app to their home
	// screen.
	//
	// Your start_url should direct the user straight into your app, not a
	// product landing page. Think about what the user will want to do
	// immediately after they open your app, and place them there.
	//
	// IMPORTANT:
	// The start_url is relative to the path defined in the scope attribute.
	//public string $start_url;

	// The background_color property is used on the splash screen when the
	// application launches on mobile for the first time.
	//public string $background_color;

	// You can customize what browser UI is shown when your app is launched. For
	// example, you can hide the address bar and browser user interface
	// elements. Games can even be made to launch in full screen. The display
	// property takes one of the following values:
	// fullscreen
	// standalone
	// minimal-ui
	// browser
	//public string $display;

	// todo: https://web.dev/articles/add-manifest#display-override
	//public string $display_override;

	// The scope of your app is the set of URLs that the browser considers part
	// of your app. scope controls the URL structure that includes all entry and
	// exit points to the app, and the browser uses it to determine when the
	// user has left the app.
	//
	// * If you don't include a scope in your manifest, then the default implied
	// scope is the start URL, but with its filename, query, and fragment
	// removed.
	// * The scope attribute can be a relative path (../), or any higher level
	// path (/) that would allow for an increase in coverage of navigations in
	// your web app.
	// * The start_url must be in the scope.
	// * The start_url is relative to the path defined in the scope attribute.
	// * A start_url starting with / will always be the root of the origin.
	//public string $scope;

	// The theme_color sets the color of the tool bar, and can be reflected in
	// the app's preview in task switchers. The theme_color should match the
	// meta theme color specified in your document head.
	//public string $theme_color;

	//public array $shortcuts;

	// max 300char (chrome) (if longer, truncated with ellipsis)
	// max 7 lines (android)
	//public string $description;

	//public array $screenshots;
	// src, sizes, type, optional form_factor (wide|narrow)


	// For PWAs, Chromium-based browsers require the following:
	// name
	// icons
	// start_url
	// display and/or display_override

	// Note, caller must ensure all strings are in UTF-8.
    public function __construct(
		public string $name,
		public array $icons,
		public string $start_url,
		public string $display
		)
	{
		// We may want additional validation in the future... for now this is
		// more or less a glorified stdClass/struct to ensure required members.
		$allowedDisplay = [
			'fullscreen',
			'standalone',
			'minimal-ui',
			'browser',
		];
		if (!in_array($this->display, $allowedDisplay))
		{
			$this->display = 'browser';
		}
	}

	public function __toString(): string
	{
		$data = $this->jsonSerialize();
		return json_encode($data, true);
	}

	public static function createFromArray(array $dbrecord) : static
	{
		return new vB_Entity_WebManifest(
			$dbrecord['name'],
			$dbrecord['icons'],
			$dbrecord['start_url'],
			$dbrecord['display']
		);
	}
}

/*=========================================================================*\
|| #######################################################################
|| # Downloaded: 12:50, Tue Dec 24th 2024
|| # CVS: $RCSfile$ - $Revision: 113078 $
|| #######################################################################
\*=========================================================================*/
