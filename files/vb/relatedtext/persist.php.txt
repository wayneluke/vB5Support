<?php
/*========================================================================*\
|| ###################################################################### ||
|| # vBulletin 6.1.0 Alpha 4 Week 2 - Licence Number VBCW2VFT7A
|| # ------------------------------------------------------------------ # ||
|| # Copyright 2000-2024 MH Sub I, LLC dba vBulletin. All Rights Reserved.  # ||
|| # This file may not be redistributed in whole or significant part.   # ||
|| # ----------------- VBULLETIN IS NOT FREE SOFTWARE ----------------- # ||
|| # http://www.vbulletin.com | http://www.vbulletin.com/license.html   # ||
|| ###################################################################### ||
\*========================================================================*/

class vB_RelatedText_Persist
{
	use vB_Trait_NoSerialize;

	private $fp;

	public function __construct(string $filename, bool $read)
	{
		$this->fp = fopen($filename, ($read ? 'r' : 'w'));
		if (!$this->fp)
		{
			throw new Exception ('Could not open file ' . $filename);
		}
	}

	public function __destruct()
	{
		if ($this->fp)
		{
			fclose($this->fp);
		}
	}

	// array of [int => int]
	public function writeIntArray(array $array) : void
	{
		$string = '';
		foreach ($array AS $key => $value)
		{
			$string .= strval($key) . ':' . strval($value) . "\n";
		}

		$string .= "\n";
		fwrite($this->fp, $string);
	}

	public function readIntArray() : array
	{
		$array = [];
		$line = fgets($this->fp);
		while ($line != "\n")
		{
			[$key, $value] = explode(':', rtrim($line), 2);
			$array[intval($key)] = intval($value);
			$line = fgets($this->fp);
		}

		return $array;
	}

	// array of [string => int]
	// assumes that the string key does not contain newlines.
	public function writeStringKeyIntArray(array $array) : void
	{
		// Reverse the order of the key/value for this one so we don't have to worry about
		// the delimeter appearing in the key.  (The integer value should never have a : in it)
		//
		// It's a bit of a hack but this isn't intended
		// for use outside of the related text module.
		$string = '';
		foreach ($array AS $key => $value)
		{
			$string .= strval($value) . ':' . strval($key) . "\n";
		}

		$string .= "\n";
		fwrite($this->fp, $string);
	}

	public function readStringKeyIntArray() : array
	{
		$array = [];
		$line = fgets($this->fp);
		while ($line != "\n")
		{
			[$value, $key] = explode(':', rtrim($line), 2);
			$array[strval($key)] = intval($value);
			$line = fgets($this->fp);
		}

		return $array;
	}

	// array of [int => float]
	public function writeFloatArray(array $array) : void
	{
		$string = '';
		foreach ($array AS $key => $value)
		{
			$string .= strval($key) . ':' . strval($value) . "\n";
		}

		$string .= "\n";
		fwrite($this->fp, $string);
	}

	public function readFloatArray() : array
	{
		$array = [];
		$line = fgets($this->fp);
		while ($line != "\n")
		{
			[$key, $value] = explode(':', rtrim($line), 2);
			$array[intval($key)] = floatval($value);
			$line = fgets($this->fp);
		}

		return $array;
	}

	public function writeInt(int $integer) : void
	{
		fwrite($this->fp, strval($integer) . "\n");
	}

	public function readInt() : int
	{
		$line = fgets($this->fp);
		return intval(rtrim($line));
	}
}

/*=========================================================================*\
|| #######################################################################
|| # Downloaded: 12:50, Tue Dec 24th 2024
|| # CVS: $RCSfile$ - $Revision: 108523 $
|| #######################################################################
\*=========================================================================*/
